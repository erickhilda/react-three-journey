/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { usePersonControls } from "../utils/usePersonControls";
import { useFrame, useThree } from "@react-three/fiber";
import { useSphere } from "@react-three/cannon";
import { Vector3 } from "three";

const SPEED = 6;

export default function Model(props) {
  const { camera } = useThree();
  const { nodes, materials, animations } = useGLTF(
    "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/korrigan-hat/model.gltf"
  );

  // const { forward, backward, left, right } = usePersonControls();

  // const [mesh, api] = useSphere(() => ({
  //   mass: 0.2,
  //   position: [0, 2, 0],
  //   type: "Dynamic",
  // }));

  // const velocity = useRef([0, 0, 0]);
  // useEffect(() => {
  //   api.velocity.subscribe((v) => (velocity.current = v));
  // }, [api.velocity]);

  const mesh = useRef();
  const { actions } = useAnimations(animations, mesh);

  // useFrame(() => {
  //   const direction = new Vector3();

  //   const frontVector = new Vector3(0, 0, Number(backward) - Number(forward));
  //   const sideVector = new Vector3(Number(left) - Number(right), 0, 0);
  //   direction
  //     .subVectors(frontVector, sideVector)
  //     .normalize()
  //     .multiplyScalar(SPEED)
  //     .applyEuler(camera.rotation);

  //   api.velocity.set(direction.x, velocity.current[1], direction.z);
  // });

  return (
    <group ref={mesh} {...props} dispose={null}>
      <group rotation={[0, 0.01, 0]}>
        <primitive object={nodes.root} />
        <skinnedMesh
          geometry={nodes.Chapeau.geometry}
          material={materials["color_main.014"]}
          skeleton={nodes.Chapeau.skeleton}
        />
      </group>
    </group>
  );
}

useGLTF.preload(
  "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/korrigan-hat/model.gltf"
);
